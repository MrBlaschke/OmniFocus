{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red108\green5\blue211;\red0\green0\blue255;
\red76\green78\blue78;\red64\green128\blue0;\red68\green21\blue176;\red255\green0\blue0;\red0\green22\blue176;
}
\deftab480
\pard\pardeftab480\slleading40\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 use
\b0  \cf3 AppleScript\cf2  \cf4 version\cf2  "2.4" \cf5 -- Yosemite (10.10) or later\cf2 \

\b use
\b0  
\i \cf4 scripting additions
\i0 \cf2 \

\b use
\b0  
\i \cf4 application
\i0 \cf2  "OmniFocus"\
\

\b property
\b0  \cf6 creator\cf2  : "Brandon Pittman"\

\b property
\b0  \cf6 thanks\cf2  : "Thank you for downloading my OmniFocus library."\

\b property
\b0  \cf6 doc\cf2  : 
\b a reference
\b0  
\b to
\b0  \cf7 default document\cf2 \
\

\b on
\b0  \cf8 selectedItems\cf2 ()\
	
\b set
\b0  \cf6 theWindow\cf2  
\b to
\b0  
\b front
\b0  
\i \cf9 document window
\i0 \cf2  
\b of
\b0  
\b front
\b0  
\i \cf4 document
\i0 \cf2  
\b of
\b0  
\i \cf4 application
\i0 \cf2  "OmniFocus"\
	
\b set
\b0  \cf6 theTasks\cf2  
\b to
\b0  
\i \cf9 selected trees
\i0 \cf2  
\b of
\b0  \cf7 content\cf2  
\b of
\b0  \cf6 theWindow\cf2 \
	
\b set
\b0  \cf6 theValues\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf6 n\cf2  
\b in
\b0  \cf6 theTasks\cf2 \
		
\b set
\b0  
\b end
\b0  
\b of
\b0  \cf6 theValues\cf2  
\b to
\b0  \cf7 value\cf2  
\b of
\b0  \cf6 n\cf2 \
	
\b end
\b0  
\b repeat
\b0 \
	\cf6 theValues\cf2 \

\b end
\b0  \cf8 selectedItems\cf2 \
\

\b on
\b0  \cf8 parse\cf2 (\cf6 transportText\cf2 )\
	
\b \cf9 parse tasks into
\b0 \cf2  \cf7 default document\cf2  \cf9 with transport text\cf2  \cf6 transportText\cf2 \

\b end
\b0  \cf8 parse\cf2 \
\

\b on
\b0  \cf8 findContext\cf2 (\cf6 contextName\cf2 )\
	
\b first
\b0  
\i \cf9 flattened context
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf3 name\cf2  
\b is
\b0  \cf6 contextName\cf2  
\b and
\b0  \cf7 hidden\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 findContext\cf2 \
\

\b on
\b0  \cf8 findProject\cf2 (\cf6 projectName\cf2 )\
	
\b first
\b0  
\i \cf9 flattened project
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf3 name\cf2  
\b is
\b0  \cf6 projectName\cf2  
\b and
\b0  \cf7 completed\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 findProject\cf2 \
\

\b on
\b0  \cf8 findFolder\cf2 (\cf6 folderName\cf2 )\
	
\b first
\b0  
\i \cf9 flattened folder
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf3 name\cf2  
\b is
\b0  \cf6 folderName\cf2  
\b and
\b0  \cf7 hidden\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 findFolder\cf2 \
\

\b on
\b0  \cf8 findTask\cf2 (\cf6 taskName\cf2 )\
	
\b first
\b0  
\i \cf9 flattened task
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf3 name\cf2  
\b is
\b0  \cf6 taskName\cf2  
\b and
\b0  \cf7 completed\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 findTask\cf2 \
\

\b on
\b0  \cf8 findAllContexts\cf2 (\cf6 contextName\cf2 )\
	
\b every
\b0  
\i \cf9 context
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf3 name\cf2  
\b is
\b0  \cf6 contextName\cf2  
\b and
\b0  \cf7 hidden\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 findAllContexts\cf2 \
\

\b on
\b0  \cf8 findAllProjects\cf2 (\cf6 projectName\cf2 )\
	
\b every
\b0  
\i \cf9 flattened project
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf3 name\cf2  
\b is
\b0  \cf6 contextName\cf2  
\b and
\b0  \cf7 completed\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 findAllProjects\cf2 \
\

\b on
\b0  \cf8 findAllFolders\cf2 (\cf6 folderName\cf2 )\
	
\b every
\b0  
\i \cf9 flattened folder
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf3 name\cf2  
\b is
\b0  \cf6 folderName\cf2  
\b and
\b0  \cf7 hidden\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 findAllFolders\cf2 \
\

\b on
\b0  \cf8 findAllTasks\cf2 (\cf6 taskName\cf2 )\
	
\b every
\b0  
\i \cf9 flattened task
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf3 name\cf2  
\b is
\b0  \cf6 taskName\cf2  
\b and
\b0  \cf7 completed\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 findAllTasks\cf2 \
\

\b on
\b0  \cf8 allTasks\cf2 ()\
	
\b every
\b0  
\i \cf9 flattened task
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf7 completed\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 allTasks\cf2 \
\

\b on
\b0  \cf8 allProjects\cf2 ()\
	
\b every
\b0  
\i \cf9 flattened project
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf7 completed\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 allProjects\cf2 \
\

\b on
\b0  \cf8 allContexts\cf2 ()\
	
\b every
\b0  
\i \cf9 flattened context
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2  
\b whose
\b0  \cf7 hidden\cf2  
\b is
\b0  
\i \cf3 false
\i0 \cf2 \

\b end
\b0  \cf8 allContexts\cf2 \
\

\b on
\b0  \cf8 setDue\cf2 (\cf6 input\cf2 , \cf6 dueDate\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf7 due date\cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf6 dueDate\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  \cf7 due date\cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf6 dueDate\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 setDue\cf2 \
\

\b on
\b0  \cf8 setDefer\cf2 (\cf6 input\cf2 , \cf6 deferDate\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf7 defer date\cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf6 deferDate\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  \cf7 defer date\cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf6 deferDate\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 setDefer\cf2 \
\

\b on
\b0  \cf8 setContainer\cf2 (\cf6 input\cf2 , \cf6 projectInput\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 projectInput\cf2  
\b is
\b0  
\i \cf4 text
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf6 theProject\cf2  
\b to
\b0  \cf8 findProject\cf2 (\cf6 projectInput\cf2 )\
	
\b else
\b0 \
		
\b set
\b0  \cf6 theProject\cf2  
\b to
\b0  \cf6 projectInput\cf2 \
	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf7 assigned container\cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf6 theProject\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  \cf7 assigned container\cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf6 theProject\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 setContainer\cf2 \
\

\b on
\b0  \cf8 setContext\cf2 (\cf6 input\cf2 , \cf6 contextInput\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 contextInput\cf2  
\b is
\b0  
\i \cf4 text
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf6 theContext\cf2  
\b to
\b0  \cf8 findContext\cf2 (\cf6 contextInput\cf2 )\
	
\b else
\b0 \
		
\b set
\b0  \cf6 theContext\cf2  
\b to
\b0  \cf6 contextInput\cf2 \
	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  
\i \cf9 context
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf6 theContext\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  
\i \cf9 context
\i0 \cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf6 theContext\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 setContext\cf2 \
\

\b on
\b0  \cf8 inboxTasks\cf2 ()\
	
\b every
\b0  
\i \cf9 inbox task
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2 \

\b end
\b0  \cf8 inboxTasks\cf2 \
\

\b on
\b0  \cf8 namePrepend\cf2 (\cf6 input\cf2 , \cf6 prependString\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf3 name\cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf6 prependString\cf2  & " " & \cf3 name\cf2  
\b of
\b0  \cf6 input\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  \cf3 name\cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf6 prependString\cf2  & " " & \cf3 name\cf2  
\b of
\b0  \cf6 _input\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 namePrepend\cf2 \
\

\b on
\b0  \cf8 nameAppend\cf2 (\cf6 input\cf2 , \cf6 appendString\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf3 name\cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf3 name\cf2  
\b of
\b0  \cf6 input\cf2  & " " & \cf6 appendString\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  \cf3 name\cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf3 name\cf2  
\b of
\b0  \cf6 _input\cf2  & " " & \cf6 appendString\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 nameAppend\cf2 \
\

\b on
\b0  \cf8 setComplete\cf2 (\cf6 input\cf2 , \cf6 flag\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf7 completed\cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf6 flag\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  \cf7 completed\cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf6 flag\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 setComplete\cf2 \
\

\b on
\b0  \cf8 setSequential\cf2 (\cf6 input\cf2 , \cf6 flag\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf7 sequential\cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf6 flag\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  \cf7 sequential\cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf6 flag\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 setSequential\cf2 \
\

\b on
\b0  \cf8 toggleSequential\cf2 (\cf6 input\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  \cf7 sequential\cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  
\b not
\b0  (\cf7 sequential\cf2  
\b of
\b0  \cf6 input\cf2 )\
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  \cf7 sequential\cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  
\b not
\b0  (\cf7 sequential\cf2  
\b of
\b0  \cf6 _input\cf2 )\
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 toggleSequential\cf2 \
\
\cf5 # Creating Flow with OmniFocus\cf2 \
\

\b on
\b0  \cf8 openPerspective\cf2 (\cf6 perspectiveName\cf2 )\
	
\b set
\b0  \cf7 perspective name\cf2  
\b of
\b0  
\b front
\b0  
\i \cf4 window
\i0 \cf2  
\b of
\b0  
\i \cf4 application
\i0 \cf2  "OmniFocus" 
\b to
\b0  \cf6 perspectiveName\cf2 \

\b end
\b0  \cf8 openPerspective\cf2 \
\

\b on
\b0  \cf8 inboxCount\cf2 ()\
	
\b \cf4 count
\b0 \cf2  
\i \cf9 inbox tasks
\i0 \cf2  
\b of
\b0  \cf7 default document\cf2 \

\b end
\b0  \cf8 inboxCount\cf2 \
\

\b on
\b0  \cf8 errandsCount\cf2 ()\
	\cf7 available task count\cf2  
\b of
\b0  \cf8 findContext\cf2 ("Errands")\

\b end
\b0  \cf8 errandsCount\cf2 \
\

\b on
\b0  \cf8 routineCount\cf2 ()\
	
\b set
\b0  \cf6 taskCount\cf2  
\b to
\b0  0\
	
\b set
\b0  \cf6 flattenedProjects\cf2  
\b to
\b0  
\i \cf9 flattened projects
\i0 \cf2  
\b of
\b0  \cf8 findFolder\cf2 ("Routine")\
	
\b repeat
\b0  
\b with
\b0  \cf6 flattenedProject\cf2  
\b in
\b0  \cf6 flattenedProjects\cf2 \
		
\b set
\b0  \cf6 taskCount\cf2  
\b to
\b0  \cf6 taskCount\cf2  + (\cf7 number of available tasks\cf2  
\b of
\b0  \cf6 flattenedProject\cf2 )\
	
\b end
\b0  
\b repeat
\b0 \

\b end
\b0  \cf8 routineCount\cf2 \
\

\b on
\b0  \cf8 landAndSeaCount\cf2 ()\
	\cf7 number of available tasks\cf2  
\b of
\b0  \cf8 findProject\cf2 ("Land & Sea")\

\b end
\b0  \cf8 landAndSeaCount\cf2 \
\

\b on
\b0  \cf8 computerName\cf2 ()\
	
\b \cf9 do shell script
\b0 \cf2  "scutil --get ComputerName"\

\b end
\b0  \cf8 computerName\cf2 \
\
\cf5 # Repetition rules\cf2 \
\

\b on
\b0  \cf8 setRepeat\cf2 (\cf6 input\cf2 , \cf6 repetitionRule\cf2 )\
	
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf9 task
\i0 \cf2  
\b then
\b0 \
		
\b set
\b0  
\i \cf9 repetition rule
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b to
\b0  \cf6 repetitionRule\cf2 \
	
\b else
\b0  
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 input\cf2  
\b is
\b0  
\i \cf4 list
\i0 \cf2  
\b then
\b0 \
		
\b repeat
\b0  
\b with
\b0  \cf6 _input\cf2  
\b in
\b0  \cf6 input\cf2 \
			
\b set
\b0  
\i \cf9 repetition rule
\i0 \cf2  
\b of
\b0  \cf6 _input\cf2  
\b to
\b0  \cf6 repetitionRule\cf2 \
		
\b end
\b0  
\b repeat
\b0 \
	
\b end
\b0  
\b if
\b0 \

\b end
\b0  \cf8 setRepeat\cf2 \
\

\b on
\b0  \cf8 deferDaily\cf2 (\cf6 input\cf2 )\
	\cf8 setRepeat\cf2 (\cf6 input\cf2 , \{\cf7 recurrence\cf2 :"FREQ=DAILY;INTERVAL=1", \cf7 repetition method\cf2 :
\i \cf7 start after completion
\i0 \cf2 \})\

\b end
\b0  \cf8 deferDaily\cf2 \
\

\b on
\b0  \cf8 deferWeekly\cf2 (\cf6 input\cf2 )\
	\cf8 setRepeat\cf2 (\cf6 input\cf2 , \{\cf7 recurrence\cf2 :"FREQ=WEEKLY;INTERVAL=1", \cf7 repetition method\cf2 :
\i \cf7 start after completion
\i0 \cf2 \})\

\b end
\b0  \cf8 deferWeekly\cf2 \
\

\b on
\b0  \cf8 deferMonthly\cf2 (\cf6 input\cf2 )\
	\cf8 setRepeat\cf2 (\cf6 input\cf2 , \{\cf7 recurrence\cf2 :"FREQ=MONTHLY;INTERVAL=1", \cf7 repetition method\cf2 :
\i \cf7 start after completion
\i0 \cf2 \})\

\b end
\b0  \cf8 deferMonthly\cf2 \
\

\b on
\b0  \cf8 repeatDaily\cf2 (\cf6 input\cf2 )\
	\cf8 setRepeat\cf2 (\cf6 input\cf2 , \{\cf7 recurrence\cf2 :"FREQ=DAILY;INTERVAL=1", \cf7 repetition method\cf2 :
\i \cf7 fixed repetition
\i0 \cf2 \})\

\b end
\b0  \cf8 repeatDaily\cf2 \
\

\b on
\b0  \cf8 repeatWeekly\cf2 (\cf6 input\cf2 )\
	\cf8 setRepeat\cf2 (\cf6 input\cf2 , \{\cf7 recurrence\cf2 :"FREQ=WEEKLY;INTERVAL=1", \cf7 repetition method\cf2 :
\i \cf7 fixed repetition
\i0 \cf2 \})\

\b end
\b0  \cf8 repeatWeekly\cf2 \
\

\b on
\b0  \cf8 repeatMonthly\cf2 (\cf6 input\cf2 )\
	\cf8 setRepeat\cf2 (\cf6 input\cf2 , \{\cf7 recurrence\cf2 :"FREQ=MONTHLY;INTERVAL=1", \cf7 repetition method\cf2 :
\i \cf7 fixed repetition
\i0 \cf2 \})\

\b end
\b0  \cf8 repeatMonthly\cf2 \
\
\cf5 # Clear properties, etc.\cf2 \
\

\b on
\b0  \cf8 clearRepeat\cf2 (\cf6 input\cf2 )\
	\cf8 setRepeat\cf2 (\cf6 input\cf2 , 
\i \cf4 missing value
\i0 \cf2 )\

\b end
\b0  \cf8 clearRepeat\cf2 \
\

\b on
\b0  \cf8 clearContext\cf2 (\cf6 input\cf2 )\
	\cf8 setContext\cf2 (\cf6 input\cf2 , 
\i \cf4 missing value
\i0 \cf2 )\

\b end
\b0  \cf8 clearContext\cf2 \
\

\b on
\b0  \cf8 clearContainer\cf2 (\cf6 input\cf2 )\
	\cf8 setContainer\cf2 (\cf6 input\cf2 , 
\i \cf4 missing value
\i0 \cf2 )\

\b end
\b0  \cf8 clearContainer\cf2 \
\

\b on
\b0  \cf8 clearDefer\cf2 (\cf6 input\cf2 )\
	\cf8 setDefer\cf2 (\cf6 input\cf2 , 
\i \cf4 missing value
\i0 \cf2 )\

\b end
\b0  \cf8 clearDefer\cf2 \
\

\b on
\b0  \cf8 showAbout\cf2 ()\
	
\b tell
\b0  
\i \cf4 application
\i0 \cf2  "System Events"\
		
\b tell
\b0  
\i \cf4 process
\i0 \cf2  "OmniFocus"\
			
\b \cf4 click
\b0 \cf2  
\i \cf4 menu item
\i0 \cf2  "About OmniFocus" 
\b of
\b0  
\i \cf4 menu
\i0 \cf2  "OmniFocus" 
\b of
\b0  
\i \cf4 menu bar item
\i0 \cf2  "OmniFocus" 
\b of
\b0  
\i \cf4 menu bar
\i0 \cf2  1\
		
\b end
\b0  
\b tell
\b0 \
	
\b end
\b0  
\b tell
\b0 \

\b end
\b0  \cf8 showAbout\cf2 \
\

\b on
\b0  \cf8 setOnHold\cf2 (\cf6 input\cf2 )\
	
\b repeat
\b0  
\b with
\b0  \cf6 i\cf2  
\b in
\b0  \cf6 input\cf2 \
		
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 i\cf2  
\b is
\b0  
\i \cf9 project
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf7 status\cf2  
\b of
\b0  \cf6 i\cf2  
\b to
\b0  
\i \cf7 on hold
\i0 \cf2 \
	
\b end
\b0  
\b repeat
\b0 \

\b end
\b0  \cf8 setOnHold\cf2 \
\

\b on
\b0  \cf8 setActive\cf2 (\cf6 input\cf2 )\
	
\b repeat
\b0  
\b with
\b0  \cf6 i\cf2  
\b in
\b0  \cf6 input\cf2 \
		
\b if
\b0  
\i \cf4 class
\i0 \cf2  
\b of
\b0  \cf6 i\cf2  
\b is
\b0  
\i \cf9 project
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf7 status\cf2  
\b of
\b0  \cf6 i\cf2  
\b to
\b0  
\i \cf7 active
\i0 \cf2 \
	
\b end
\b0  
\b repeat
\b0 \

\b end
\b0  \cf8 setActive}